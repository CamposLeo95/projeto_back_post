generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String
  password     String
  admin        Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
  image_perfil String?
  image_cover  String?
  bio          String?   @db.VarChar(100)
  comments     Comment[]
  likes        Like[]
  posts        Post[]

  @@map("users")
}

model Post {
  id         Int       @id @default(autoincrement())
  content    String
  image_url  String?
  id_user    Int
  created_at DateTime  @default(now()) @db.Timestamp(6)
  comments   Comment[]
  user       User      @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_userId_fkey")

  @@map("posts")
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  id_user    Int
  id_post    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  post       Post     @relation(fields: [id_post], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_postId_fkey")
  user       User     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_userId_fkey")

  @@map("comments")
}

model Like {
  id_post    Int
  id_user    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  user       User     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_post, id_user], name: "id_user_id_post")
  @@map("likes")
}
